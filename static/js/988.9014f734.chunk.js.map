{"version":3,"file":"static/js/988.9014f734.chunk.js","mappings":"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","sources":["pages/Pages.styled.js","redux/cartOperations.js","components/CartItem/CartItem.styled.js","components/CartItem/CartItem.jsx","components/CartList/CartList.styled.js","components/CartList/CartList.jsx","components/CartForm/CartForm.styled.js","components/CartForm/CartForm.jsx","pages/ShoppingCart.jsx","redux/selectors.js","styles/visually-hidden.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Container } from 'styles/GlobalStyles';\n\nexport const ShopsContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 20vh;\n  width: 100%;\n\n  font-weight: 700;\n`;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\n// axios.defaults.baseURL = 'http://localhost:8080/api';\naxios.defaults.baseURL = 'https://medicine-delivery-app-server.onrender.com/api';\n\nexport const sendOrder = createAsyncThunk('orders/fetchAll', async (order, { rejectWithValue }) => {\n  try {\n    const { data } = await axios.post('/orders', order);\n\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 8px;\n\n  width: 100%;\n\n  background-color: white;\n  border: 1px solid teal;\n  border-radius: 12px;\n\n  padding: 6px 12px;\n\n  @media screen and (min-width: 425px) {\n    width: calc(100% / 2 - 8px);\n  }\n\n  @media screen and (min-width: 1024px) {\n    width: calc(100% / 3 - 16px);\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n\n  background-color: transparent;\n\n  border: 1px solid teal;\n  border-radius: 12px;\n\n  margin-top: 8px;\n  padding: 6px 12px;\n\n  transition: color background-color 0.3 ease;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: teal;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { delFromCart } from '../../redux/cartSlice';\n\nimport { Button, Item } from './CartItem.styled';\nimport { toast } from 'react-toastify';\n\nconst CartItem = ({ medicine }) => {\n  const dispatch = useDispatch();\n\n  const handleDelFromCart = () => {\n    dispatch(delFromCart(medicine));\n    toast.success(`${medicine.name} is deleted from the cart!`);\n  };\n\n  return (\n    <Item>\n      <h3>{medicine.name}</h3>\n      <p>{medicine.price}$</p>\n      <Button type=\"button\" onClick={handleDelFromCart}>\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nexport default CartItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: flex-start;\n  flex-grow: 1;\n  flex-wrap: wrap;\n  gap: 8px;\n`;\n","import CartItem from 'components/CartItem/CartItem';\nimport { List } from './CartList.styled';\n\nconst CartList = ({ medicines }) => {\n  return (\n    <List>\n      {medicines.map(medicine => (\n        <CartItem key={medicine._id} medicine={medicine} />\n      ))}\n    </List>\n  );\n};\n\nexport default CartList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  width: 100%;\n`;\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n  width: 100%;\n`;\n\nexport const FormInputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  width: 290px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid teal;\n  border-radius: 12px;\n\n  margin-top: 8px;\n  padding: 6px 12px;\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const Button = styled.button`\n  background-color: white;\n\n  border: 1px solid teal;\n  border-radius: 12px;\n\n  padding: 6px 24px;\n\n  transition: color background-color 0.3 ease;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: teal;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectCartMedicines, selectCartUser } from '../../redux/selectors';\nimport { resetUser, updateUser } from '../../redux/cartSlice';\nimport { sendOrder } from '../../redux/cartOperations';\n\nimport { toast } from 'react-toastify';\nimport CartList from 'components/CartList/CartList';\nimport { BtnWrapper, Button, Form, FormInputs, FormWrapper, Input, Label } from './CartForm.styled';\n\nconst CartForm = ({ medicines }) => {\n  const dispatch = useDispatch();\n  const cartMedicines = useSelector(selectCartMedicines);\n\n  const cartUser = useSelector(selectCartUser);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    dispatch(updateUser({ [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const order = {\n      user: cartUser,\n      medicines: cartMedicines,\n    };\n\n    try {\n      dispatch(sendOrder(order));\n      toast.success('Order send successfully!');\n    } catch (error) {\n      toast.error('Something went wrong! Please, try again later!');\n    }\n\n    dispatch(resetUser());\n  };\n\n  const calculateTotalPrice = () => {\n    const totalPrice = cartMedicines.reduce((total, medicine) => total + medicine.price, 0);\n    return parseFloat(totalPrice.toFixed(2));\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormWrapper>\n        <FormInputs>\n          <Label>\n            Name:\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={cartUser.name}\n              onChange={handleInputChange}\n              required\n            />\n          </Label>\n          <Label>\n            Email:\n            <Input\n              type=\"email\"\n              name=\"email\"\n              value={cartUser.email}\n              onChange={handleInputChange}\n              required\n            />\n          </Label>\n          <Label>\n            Phone:\n            <Input\n              type=\"tel\"\n              name=\"phone\"\n              value={cartUser.phone}\n              onChange={handleInputChange}\n              required\n            />\n          </Label>\n          <Label>\n            Address:\n            <Input\n              type=\"text\"\n              name=\"address\"\n              value={cartUser.address}\n              onChange={handleInputChange}\n              required\n            />\n          </Label>\n        </FormInputs>\n        <CartList medicines={medicines} />\n      </FormWrapper>\n      <BtnWrapper>\n        <p>Total price: {calculateTotalPrice()}$</p>\n        <Button type=\"submit\">Submit</Button>\n      </BtnWrapper>\n    </Form>\n  );\n};\n\nexport default CartForm;\n","import { useSelector } from 'react-redux';\n\nimport { selectCartMedicines } from '../redux/selectors';\n\nimport { Content, ShopsContainer } from './Pages.styled';\nimport { Section } from 'styles/GlobalStyles';\nimport { hiddenStyles } from 'styles/visually-hidden';\nimport CartForm from 'components/CartForm/CartForm';\n\nconst ShoppingCart = () => {\n  const cart = useSelector(selectCartMedicines);\n\n  return (\n    <Section>\n      <ShopsContainer>\n        <h2 style={hiddenStyles}>Shopping Cart</h2>\n        {cart.length !== 0 ? (\n          <CartForm medicines={cart} />\n        ) : (\n          <Content>No medicines add to the cart!</Content>\n        )}\n      </ShopsContainer>\n    </Section>\n  );\n};\n\nexport default ShoppingCart;\n","export const selectPharmacies = state => state.pharmacies.items;\nexport const selectIsLoading = state => state.pharmacies.isLoading;\nexport const selectError = state => state.pharmacies.error;\nexport const selectCartMedicines = state => state.cart.medicines;\nexport const selectCartUser = state => state.cart.user;\n","const hiddenStyles = {\n  display: 'inline-block',\n  position: 'absolute',\n  overflow: 'hidden',\n  clip: 'rect(0 0 0 0)',\n  height: 1,\n  width: 1,\n  margin: -1,\n  padding: 0,\n  border: 0,\n};\n\nexport { hiddenStyles };\n"],"names":["ShopsContainer","styled","Container","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","axios","sendOrder","createAsyncThunk","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","order","_ref","rejectWithValue","_yield$axios$post","data","_context","prev","next","sent","abrupt","t0","message","stop","_x","_x2","apply","arguments","Item","Button","medicine","dispatch","useDispatch","_jsxs","children","_jsx","name","price","type","onClick","delFromCart","toast","concat","List","medicines","map","CartItem","_id","Form","FormWrapper","FormInputs","_templateObject3","Label","_templateObject4","Input","_templateObject5","BtnWrapper","_templateObject6","_templateObject7","cartMedicines","useSelector","selectCartMedicines","cartUser","selectCartUser","handleInputChange","e","_e$target","target","value","updateUser","_defineProperty","onSubmit","preventDefault","user","error","resetUser","onChange","required","email","phone","address","CartList","totalPrice","reduce","total","parseFloat","toFixed","calculateTotalPrice","cart","Section","style","hiddenStyles","length","CartForm","selectPharmacies","state","pharmacies","items","selectIsLoading","isLoading","display","position","overflow","clip","height","width","margin","padding","border"],"sourceRoot":""}