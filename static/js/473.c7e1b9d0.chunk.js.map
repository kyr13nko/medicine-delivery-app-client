{"version":3,"file":"static/js/473.c7e1b9d0.chunk.js","mappings":"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","sources":["redux/pharmacySelectors.js","components/PharmacyItem/PharmacyItem.styled.js","components/PharmacyItem/PharmacyItem.jsx","components/PharmacyList/PharmacyList.styled.js","components/PharmacyList/PharmacyList.jsx","components/MedicineItem/MedicineItem.jsx","components/MedicineList/MedicineList.jsx","pages/Shop.styled.js","styles/visually-hidden.js","pages/Shop.jsx"],"sourcesContent":["export const selectPharmacies = state => state.pharmacies.items;\nexport const selectIsLoading = state => state.pharmacies.isLoading;\nexport const selectError = state => state.pharmacies.error;\n// export const selectFavorites = state => state.favorites.items;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  width: 100%;\n\n  text-align: center;\n\n  color: ${props => (props.$isSelected ? 'white' : 'teal')};\n  background-color: ${props => (props.$isSelected ? 'teal' : 'transparent')};\n\n  border: 1px solid teal;\n  border-radius: 12px;\n\n  cursor: pointer;\n\n  padding: 6px 12px;\n`;\n","import { Item } from './PharmacyItem.styled';\n\nconst PharmacyItem = ({ pharmacy, onPharmacyClick, isSelected }) => {\n  return (\n    <Item onClick={() => onPharmacyClick(pharmacy)} $isSelected={isSelected}>\n      <p>{pharmacy.name}</p>\n    </Item>\n  );\n};\n\nexport default PharmacyItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n\n  width: 290px;\n\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    margin: 0;\n  }\n`;\n","import PharmacyItem from 'components/PharmacyItem/PharmacyItem';\nimport { List } from './PharmacyList.styled';\nimport { useState } from 'react';\n\nconst PharmacyList = ({ pharmacies, onPharmacyClick }) => {\n  const [selectedPharmacy, setSelectedPharmacy] = useState(null);\n\n  const handlePharmacyClick = pharmacy => {\n    setSelectedPharmacy(pharmacy);\n    onPharmacyClick(pharmacy);\n  };\n  return (\n    <List>\n      {pharmacies.map(pharmacy => (\n        <PharmacyItem\n          key={pharmacy._id}\n          pharmacy={pharmacy}\n          onPharmacyClick={handlePharmacyClick}\n          isSelected={selectedPharmacy && selectedPharmacy._id === pharmacy._id}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default PharmacyList;\n","const MedicineItem = ({ medicine }) => {\n  return (\n    <li>\n      <h3>{medicine.name}</h3>\n      <p>{medicine.price}$</p>\n    </li>\n  );\n};\n\nexport default MedicineItem;\n","import MedicineItem from 'components/MedicineItem/MedicineItem';\n\nconst MedicineList = ({ pharmacy }) => {\n  const medicinesArr = pharmacy.medicines.map(medicine => medicine._id);\n\n  return (\n    <div>\n      <h3>{pharmacy.name}</h3>\n      <ul>\n        {medicinesArr.map(medicine => (\n          <MedicineItem key={medicine._id} medicine={medicine} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MedicineList;\n","import styled from 'styled-components';\nimport { Container } from 'styles/GlobalStyles';\n\nexport const ShopsContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n","const hiddenStyles = {\n  display: 'inline-block',\n  position: 'absolute',\n  overflow: 'hidden',\n  clip: 'rect(0 0 0 0)',\n  height: 1,\n  width: 1,\n  margin: -1,\n  padding: 0,\n  border: 0,\n};\n\nexport { hiddenStyles };\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectIsLoading, selectPharmacies } from '../redux/pharmacySelectors';\nimport { fetchPharmacy } from '../redux/pharmacyOperations';\n\nimport PharmacyList from 'components/PharmacyList/PharmacyList';\nimport MedicineList from 'components/MedicineList/MedicineList';\n\nimport { Section } from 'styles/GlobalStyles';\nimport { ShopsContainer } from './Shop.styled';\nimport { hiddenStyles } from 'styles/visually-hidden';\nimport Loader from 'components/Loader/Loader';\n\nconst Shop = () => {\n  const dispatch = useDispatch();\n  const pharmacies = useSelector(selectPharmacies);\n  const isLoading = useSelector(selectIsLoading);\n  const [selectedPharmacy, setSelectedPharmacy] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchPharmacy());\n  }, [dispatch]);\n\n  const handlePharmacyClick = pharmacy => {\n    setSelectedPharmacy(pharmacy);\n  };\n\n  return (\n    <Section>\n      <ShopsContainer>\n        <h2 style={hiddenStyles}>Shops</h2>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <>\n            <PharmacyList pharmacies={pharmacies} onPharmacyClick={handlePharmacyClick} />\n            {selectedPharmacy ? (\n              <MedicineList pharmacy={selectedPharmacy} />\n            ) : (\n              <div>Choose the shop, please!</div>\n            )}\n          </>\n        )}\n      </ShopsContainer>\n    </Section>\n  );\n};\n\nexport default Shop;\n"],"names":["selectPharmacies","state","pharmacies","items","selectIsLoading","isLoading","Item","styled","_templateObject","_taggedTemplateLiteral","props","$isSelected","_ref","pharmacy","onPharmacyClick","isSelected","_jsx","onClick","children","name","List","_useState","useState","_useState2","_slicedToArray","selectedPharmacy","setSelectedPharmacy","handlePharmacyClick","map","PharmacyItem","_id","medicine","_jsxs","price","medicinesArr","medicines","MedicineItem","ShopsContainer","Container","hiddenStyles","display","position","overflow","clip","height","width","margin","padding","border","dispatch","useDispatch","useSelector","useEffect","fetchPharmacy","Section","style","Loader","_Fragment","PharmacyList","MedicineList"],"sourceRoot":""}